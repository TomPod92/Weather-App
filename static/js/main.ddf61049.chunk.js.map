{"version":3,"sources":["components/Header.js","components/SideButton.js","components/SidePanel.js","components/SideButtonClose.js","components/Overlay.js","components/Form.js","components/Weather.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","dist_default","iconSet","color","size","icon","SideButton","props","onClick","handleOpenSidePanel","SidePanel","content","weather","map","current","key","dt","dt_txt","split","Math","round","main","temp","pressure","humidity","wind","speed","active","SideButtonClose","sidePanelOpen","Overlay","components_SideButtonClose","Form","onSubmit","type","placeholder","value","onChange","required","Weather","_props$weather","city","temp_min","temp_max","sunrise","sunset","status","sunriseHour","Date","toLocaleTimeString","sunsetHour","handleForeCast","Fragment","App","state","longitude","latitude","gotData","foreCast","e","stopPropagation","_this","setState","prevState","handleFormSubmit","event","preventDefault","fetch","concat","then","response","ok","Error","json","data","coord","lon","lat","sys","catch","error","handleInputChange","target","list","index","i","toString","push","style","position","height","components_Header","this","components_SideButton","components_SidePanel","components_Overlay","components_Form","components_Weather","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ddf61049.chunk.js","sourcesContent":["import React from 'react'\r\nimport iconSet from '../selection.json'\r\nimport IcomoonReact from 'icomoon-react'\r\nimport '../styles/header.scss'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header--logo\">\r\n                <IcomoonReact iconSet={iconSet} color=\"#f7f7f7\" size={'4.5rem'} icon=\"soundcloud\" />    \r\n            </div>\r\n\r\n            <h1 className=\"header--title\">Weather App</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport iconSet from \"../selection.json\";\r\nimport IcomoonReact from \"icomoon-react\";\r\nimport '../styles/sideButton.scss'\r\n\r\nconst SideButton = props => {\r\n  return (\r\n    <button className=\"sideButton\" onClick={props.handleOpenSidePanel}>\r\n      <IcomoonReact\r\n        iconSet={iconSet}\r\n        className=\"icon\"\r\n        color=\"#f7f7f7\"\r\n        size={\"3rem\"}\r\n        icon=\"arrow-right\"\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SideButton;\r\n","import React from \"react\";\r\nimport \"../styles/sidePanel.scss\";\r\nimport iconSet from '../selection.json'\r\nimport IcomoonReact from 'icomoon-react'\r\n\r\nconst SidePanel = props => {\r\n  let content;\r\n\r\n  if (props.weather) {\r\n    content = props.weather.map(current => (\r\n      <div key={current.dt} className=\"foreCast\">\r\n        <div>Pogoda na dzień: {current.dt_txt.split(' ')[0]}</div>\r\n        <div>\r\n          <IcomoonReact iconSet={iconSet} color=\"#fff\" size={'2rem'} icon=\"thermometer\" className=\"iconInline\"/>\r\n          Temperatura: {Math.round(current.main.temp)}&#176;C\r\n        </div>\r\n        <div>\r\n          <IcomoonReact iconSet={iconSet} color=\"#fff\" size={'2rem'} icon=\"download2\" className=\"iconInline\"/>\r\n          Ciśnienie: {current.main.pressure}hPa\r\n          </div>\r\n        <div>\r\n          <IcomoonReact iconSet={iconSet} color=\"#fff\" size={'2rem'} icon=\"droplet\" className=\"iconInline\"/>\r\n          Wilgotność: {current.main.humidity}%\r\n          </div>\r\n        <div>\r\n          <IcomoonReact iconSet={iconSet} color=\"#fff\" size={'2rem'} icon=\"wind\" className=\"iconInline\"/>\r\n          Prędkość wiatru: {current.wind.speed}m/s\r\n          </div>\r\n      </div>\r\n    ));\r\n  } else {\r\n    content= (<div className=\"info\">Wyszukaj pogodne na kolejne dni</div>)\r\n  }\r\n\r\n  return (\r\n    <div className={props.active ? \"sidePanel sidePanel--active\" : \"sidePanel\"}>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n","import React from \"react\";\r\nimport iconSet from \"../selection.json\";\r\nimport IcomoonReact from \"icomoon-react\";\r\nimport \"../styles/sideButtonClose.scss\";\r\n\r\nconst SideButtonClose = props => {\r\n  return (\r\n    <button\r\n      className={!props.active ? \"buttonClose\" : \"buttonClose buttonClose--active\"}\r\n      onClick={props.handleOpenSidePanel}\r\n      active={props.sidePanelOpen}\r\n    >\r\n      <IcomoonReact\r\n        iconSet={iconSet}\r\n        className=\"icon\"\r\n        color=\"#fff\"\r\n        size={\"3rem\"}\r\n        icon=\"arrow-left\"\r\n      />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SideButtonClose;\r\n","import React from \"react\";\r\nimport \"../styles/overlay.scss\";\r\n\r\nimport SideButtonClose from \"./SideButtonClose.js\";\r\n\r\nconst Overlay = props => {\r\n  return (\r\n    <div\r\n      className={!props.active ? \"overlay\" : \"overlay overlay--active\"}\r\n      onClick={props.handleOpenSidePanel}\r\n    >\r\n      <SideButtonClose active={props.active} handleOpenSidePanel={props.handleOpenSidePanel}/>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import React from \"react\";\r\nimport '../styles/form.scss'\r\n\r\nconst Form = props => {\r\n  return (\r\n    <form className=\"form\" onSubmit={props.onSubmit}>\r\n      <input className=\"form__input\" type=\"text\" placeholder=\"Podaj miasto\" value={props.value} onChange={props.onChange} required/>\r\n      \r\n      <button className=\"button button--form\">Wyszukaj</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport '../styles/weather.scss'\r\nimport iconSet from '../selection.json'\r\nimport IcomoonReact from 'icomoon-react'\r\n\r\nconst Weather = (props) => {\r\n    const {city,temp,temp_min,temp_max,pressure,humidity,wind,sunrise,sunset,status} = props.weather;\r\n\r\n    const sunriseHour = new Date(sunrise*1000).toLocaleTimeString();\r\n    const sunsetHour = new Date(sunset*1000).toLocaleTimeString();\r\n    \r\n    let content = (\r\n        <div className=\"weather\">\r\n            <div className=\"weather__title\">Pogoda dla: {city}</div>\r\n\r\n            <div className=\"weather--basic\">\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"thermometer\" className=\"iconInline\"/>\r\n                    Średnia temperatura: {Math.round(temp)}&#176;C\r\n                </div>\r\n\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"download2\" className=\"iconInline\"/>\r\n                    Ciśnienie: {pressure}hPa\r\n                </div>\r\n\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"droplet\" className=\"iconInline\"/>\r\n                    Wilgotność: {humidity}%\r\n                </div>\r\n\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"wind\" className=\"iconInline\"/>\r\n                    Prędkośc wiatru: {wind}m/s\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"weather--additional\">\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"plus\" className=\"iconInline\"/>\r\n                    Temperatura minimalna: {Math.round(temp_min)}&#176;C\r\n                    </div>\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"minus\" className=\"iconInline\"/>\r\n                    Temperatura maksymalna: {Math.round(temp_max)}&#176;C\r\n                    </div>\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"sun\" className=\"iconInline\"/>\r\n                    Wschód słonca: {sunriseHour}\r\n                    </div>\r\n                <div className=\"weather__item\">\r\n                    <IcomoonReact iconSet={iconSet} color=\"#2f84ea\" size={'2rem'} icon=\"moon\" className=\"iconInline\"/>\r\n                    Zachód słonca: {sunsetHour}\r\n                    </div>\r\n            </div>\r\n\r\n            <button className=\"button button--weather\" onClick={props.handleForeCast}>Pogoda na kolejne dni</button> \r\n        </div>\r\n    );\r\n\r\n    return ( \r\n        <>\r\n            {status ? content : <div className=\"info\">Coś poszło nie tak :( <br/> Nie mam w bazie: {city}</div>}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Weather;","import React from \"react\";\nimport Header from \"./Header.js\";\nimport SideButton from \"./SideButton.js\";\n// import SideButtonClose from \"./SideButtonClose.js\";\nimport SidePanel from \"./SidePanel.js\";\nimport Overlay from \"./Overlay.js\";\nimport Form from \"./Form.js\"\nimport Weather from \"./Weather.js\"\n\nclass App extends React.Component {\n  state = {\n    sidePanelOpen: false,\n    value:'',\n    city:'',\n    longitude:'',\n    latitude:'',\n    temp:'',\n    temp_min:'',\n    temp_max:'',\n    pressure:'',\n    humidity:'',\n    wind:'',\n    sunrise:'',\n    sunset:'',\n    status: false,\n    gotData: false,\n    foreCast: null\n  };\n\n  handleOpenSidePanel = (e) => {\n\n    if(e) e.stopPropagation();\n    this.setState(prevState => ({\n      sidePanelOpen: !prevState.sidePanelOpen\n    }));\n  };\n\n  handleFormSubmit = (event) => {\n    const APIKEY = '56ba80aa326c4d258307380c4713b0b3';\n\n    // prevent reloading the page on form submit\n    event.preventDefault();\n\n    // get data from OPENWEATHERMAP api\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${APIKEY}&units=metric`)\n    // if everything went ok set \"status\" to true\n    .then(response => {\n      if(response.ok) {\n        this.setState({\n          status:response.ok,\n          foreCast: null\n        })\n        return response\n      } \n      throw Error(response.status)\n    })\n    // change response to json\n    .then(response => response.json())\n    // update the state with that json\n    .then(data => {\n      this.setState( prevState => (\n        {\n          city: prevState.value,\n          longitude: data.coord.lon,\n          latitude: data.coord.lat,\n          temp: data.main.temp,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          wind: data.wind.speed,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          gotData: true,\n          value:''\n      }))\n    })\n    // if something went wrong\n    .catch(error => {\n      this.setState({\n        gotData: true,\n        status: false,\n        city: this.state.value,\n        value:'',\n        foreCast: null\n      })\n    })\n\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      value: event.target.value\n    })\n  }\n\n  handleForeCast = () => {\n    const APIKEY = '56ba80aa326c4d258307380c4713b0b3';\n\n    // get data from API (for 5 days)\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${APIKEY}&units=metric`)\n    //\n    .then(response => {\n      if(response.ok) return response\n    })\n    // change response to json\n    .then(response => response.json())\n    // push one foreCast from each day to an array and update the state with it\n    .then(data => {\n      const foreCast = [];\n      \n      data.list.map( (current,index) => {\n        let i = index.toString();\n\n        if(i[0]=== '4' || i[1] === '4') foreCast.push(current)\n        return undefined\n      })\n\n      this.setState({\n        foreCast:foreCast\n      })\n\n      this.handleOpenSidePanel();\n    })\n  }\n\n  render() {\n    return (\n      <div style={{ position: \"relative\", height: \"100%\" }}>\n        <Header handleOpenSidePanel={this.handleOpenSidePanel} />\n\n        <SideButton handleOpenSidePanel={this.handleOpenSidePanel}/>\n\n        <SidePanel\n          active={this.state.sidePanelOpen}\n          handleOpenSidePanel={this.handleOpenSidePanel}\n          weather={this.state.foreCast}\n        />\n\n        <Overlay\n          active={this.state.sidePanelOpen}\n          handleOpenSidePanel={this.handleOpenSidePanel}\n        />\n\n        <Form value={this.state.value} onSubmit={this.handleFormSubmit} onChange={this.handleInputChange}/>\n\n        {this.state.gotData ? <Weather weather={this.state} handleForeCast={this.handleForeCast}/> : <div className=\"info\">Wyszukaj miasto</div>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}